package com.assignment.leadics;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import java.util.*;
import java.lang.*;
@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  @PostMapping(path="/users") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestParam String name
      , @RequestParam Integer age) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    User n = new User();
    n.setName(name);
    n.setAge(age);
    userRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/users")
  public @ResponseBody Iterable<User> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }

  @GetMapping(path="/users/ages")
  public @ResponseBody Map<Integer,Integer> getAgeCount() {
    Iterable<User> users = userRepository.findAll();
    Map<Integer,Integer> ageCountMap = new HashMap<Integer,Integer>();
    for(User user: users){
        ageCountMap.merge(user.getAge(), 1, Integer::sum);
        
    }
    return ageCountMap;
  }
  @GetMapping(path="/users/namesWithAge")
  public @ResponseBody Map<String,Integer> getNameAndAge() {
    Iterable<User> users = userRepository.findAll();
    Map<String,Integer> nameAndAgeMap = new HashMap<String,Integer>();
    for(User user: users){
        nameAndAgeMap.put(user.getName(),user.getAge());
        
    }
    return nameAndAgeMap;
  }  

  
}